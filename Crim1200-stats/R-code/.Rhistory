library(tidyverse)
library(palmerpenguins)
library(ggplot2)
?penguins
typeof(flipper_length_mm)
class(flipper_length_mm)
penguins %>% class(flipper_length_mm)
# SELECTING SOME OBSERVATIONS
penguins %>% filter(species == "Adelie")
penguins %>% class("flipper_length_mm")
class("flipper_length_mm")
# SELECTING SOME OBSERVATIONS
penguins %>% filter(species == "Adelie")
View(penguins)
filter(.data=penguins, species == "Adelie")
# SELECTING SOME OBSERVATIONS
penguin_a <- penguins %>% filter(species == "Adelie")
View(penguin_a)
# REORDERING ROWS
penguins %>% arrange(bill_length_mm) # sort by bill length
penguins %>% arrange(desc(bill_length_mm)) # sort by reverse bill length
# REORDERING ROWS
penguins %>% arrange(bill_length_mm) # sort by bill length
# CHOOSING ROWS
# Choose rows using their position using slice()
penguins %>% slice(3:4) # select only rows 3 and 4
penguins %>% slice_sample(n=5) # see a random sample of five rows
penguins %>% slice_sample(n=5, replace=TRUE) # same, but sample with replacement
penguins %>% slice_max(bill_length_mm, n=1) # select row that has the highest bill_length_mm
penguins %>% select(bill_length_mm) # select a single column, bill_length_mm
penguins %>% select(bill_length_mm) %>% max(na.rm = TRUE) # find the maximum of that column. note: if there are missing NA values, just add "na.rm = TRUE".
penguins %>% mutate(bill_length_m = bill_length_mm / 1000) # made new column that's in meters now
penguins %>% mutate(bill_length_m = bill_length_mm / 1000, .keep = "none") # same but only keep new var
penguins %>% count(species) # create a frequency table, same as table(species) in base R
penguins %>% mutate(gender = sex, .keep = "none")
penguins %>% summarise(avg=mean(flipper_length_mm, na.rm=TRUE))
penguins %>% group_by(species) %>% summarize(m=mean(bill_length_mm, na.rm=TRUE),
sd=sd(bill_length_mm, na.rm=TRUE),
n=n()) # group by species
penguins %>% group_by(island) %>% summarize(m=mean(bill_length_mm, na.rm=TRUE),
sd=sd(bill_length_mm, na.rm=TRUE),
n=n()) # group by island
# SUMMARIZE VALUES
# get the mean for a specific
penguins %>% summarise(avg=mean(flipper_length_mm, na.rm=TRUE),
med = median(flipper_length_mm, na.rm =. TRUE))
# SUMMARIZE VALUES
# get the mean for a specific
penguins %>% summarise(avg=mean(flipper_length_mm, na.rm=TRUE),
med = median(flipper_length_mm, na.rm = TRUE))
# study penguin body mass
# variable type:
class("body_mass_g")
penguins %>% ggplot(aes(x = body_mass_g, y = n()))
penguins %>% ggplot(aes(x = body_mass_g, y = n())) + geom_point()
penguins %>% ggplot(aes(x = body_mass_g)) + geom_point()
penguins %>% ggplot(aes(x = body_mass_g)) + geom_histogram()
# study penguin body mass
# variable type:
class("body_mass_g")
# study penguin body mass
# variable type:
typeof("body_mass_g")
# study penguin body mass
# variable type:
str("body_mass_g")
# study penguin body mass
# variable type:
is.datatype("body_mass_g")
penguins %>% summarise(m = mean(body_mass_g, na.rm = TRUE),
med = median(body_mass_g, na.rm = TRUE),
n = n())
penguins %>% group_by(species), summarise(m = mean(body_mass_g, na.rm = TRUE),
penguins %>% group_by(species) %>%
summarise(m = mean(body_mass_g, na.rm = TRUE),
med = median(body_mass_g, na.rm = TRUE),
n = n())
penguins %>% ggplot(aes(x = body_mass_g, fill = species)) + geom_histogram()
penguins %>% ggplot(aes(x = body_mass_g, fill =as.factor(species)) + geom_histogram()
penguins %>% ggplot(aes(x = body_mass_g, fill =as.factor(species))) + geom_histogram()
penguins %>% ggplot(aes(x = body_mass_g, fill = species)) + geom_histogram()
penguins %>% group_by(species) %>%
summarise(m = mean(body_mass_g, na.rm = TRUE),
med = median(body_mass_g, na.rm = TRUE),
n = n())
penguins %>% ggplot(aes(x=body_mass_g))+ geom_histogram()+facet_wrap(species)
penguins %>% ggplot(aes(x=body_mass_g))+ geom_histogram()+facet_wrap(~species)
penguins %>% ggplot(aes(x = body_mass_g, fill = species)) + geom_histogram()+
x_lab("species stuff")
penguins %>% ggplot(aes(x = body_mass_g, fill = species)) + geom_histogram()+
xlab("species stuff")
penguins %>% ggplot(aes(x = body_mass_g, fill = species)) + geom_histogram()+
xlab("Body Mass in Grams")+
ggtitle("Body Mass of Penguins by Species")+
ylab("Number of Penguins")
penguins %>% ggplot(aes(x=body_mass_g))+ geom_histogram()+facet_wrap(~species)
penguins %>% ggplot(aes(x = body_mass_g, fill = species)) + geom_histogram()+
xlab("Body Mass in Grams")+
ggtitle("Body Mass of Penguins by Species")+
ylab("Number of Penguins")
penguins %>% ggplot(aes(x=body_mass_g))+ geom_histogram()+facet_wrap(~species)
ggplot2::theme_set(ggplot2::theme_minimal())
penguins %>% ggplot(aes(x = body_mass_g, fill = species)) + geom_histogram()+
xlab("Body Mass in Grams")+
ggtitle("Body Mass of Penguins by Species")+
ylab("Number of Penguins")+
theme_classic()
summary(penguins$body_mass_g)
penguins %>% group_by(species) %>%
summarise(m = mean(body_mass_g, na.rm = TRUE),
med = median(body_mass_g, na.rm = TRUE),
n = n(),
std = sd(body_mass_g))
penguins %>% group_by(species) %>%
summarise(m = mean(body_mass_g, na.rm = TRUE),
med = median(body_mass_g, na.rm = TRUE),
n = n(),
std = sd(body_mass_g, na.rm= TRUE))
penguins %>% ggplot(aes(x=body_mass_g))+ geom_histogram()+facet_wrap(~species)
penguins %>% ggplot(aes(x=body_mass_g))+ geom_histogram()+facet_grid(~species)
penguins %>% ggplot(aes(x=body_mass_g))+ geom_histogram()+facet_grid(~species, scales = "free_y")
penguins %>% ggplot(aes(x=body_mass_g))+ geom_histogram()+facet_grid(vars = species, scales = "free_y")
penguins %>% ggplot(aes(x=body_mass_g))+ geom_histogram()+facet_grid(vars(species), scales = "free_y")
penguins %>% group_by(species) %>%
summarise(m = mean(body_mass_g, na.rm = TRUE),
med = median(body_mass_g, na.rm = TRUE),
n = n(),
std = sd(body_mass_g, na.rm= TRUE))
penguins %>% ggplot(aes(x = flipper_length_mm, y = body_mass_g))+geom_point()
penguins %>% ggplot(aes(x = flipper_length_mm, y = body_mass_g, color = species))+geom_point()
